{"ast":null,"code":"var dateOptions = {\n  day: 'numeric',\n  month: 'short',\n  year: 'numeric'\n};\nvar timeOptions = {\n  hour: '2-digit',\n  minute: '2-digit'\n};\n\nvar dateFormat = function dateFormat(locale, date) {\n  var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : dateOptions;\n  return date.toLocaleDateString(locale, options);\n};\n\nvar timeFormat = function timeFormat(locale, date) {\n  var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : timeOptions;\n  return date.toLocaleTimeString(locale, options);\n};\n\nexport { dateFormat, timeFormat };","map":{"version":3,"sources":["C:/Users/aa883/workshop/node_modules/@intility/bifrost-react/es/utils/formatDate.js"],"names":["dateOptions","day","month","year","timeOptions","hour","minute","dateFormat","locale","date","options","arguments","length","undefined","toLocaleDateString","timeFormat","toLocaleTimeString"],"mappings":"AAAA,IAAIA,WAAW,GAAG;AAChBC,EAAAA,GAAG,EAAE,SADW;AAEhBC,EAAAA,KAAK,EAAE,OAFS;AAGhBC,EAAAA,IAAI,EAAE;AAHU,CAAlB;AAKA,IAAIC,WAAW,GAAG;AAChBC,EAAAA,IAAI,EAAE,SADU;AAEhBC,EAAAA,MAAM,EAAE;AAFQ,CAAlB;;AAKA,IAAIC,UAAU,GAAG,SAASA,UAAT,CAAoBC,MAApB,EAA4BC,IAA5B,EAAkC;AACjD,MAAIC,OAAO,GAAGC,SAAS,CAACC,MAAV,GAAmB,CAAnB,IAAwBD,SAAS,CAAC,CAAD,CAAT,KAAiBE,SAAzC,GAAqDF,SAAS,CAAC,CAAD,CAA9D,GAAoEX,WAAlF;AACA,SAAOS,IAAI,CAACK,kBAAL,CAAwBN,MAAxB,EAAgCE,OAAhC,CAAP;AACD,CAHD;;AAKA,IAAIK,UAAU,GAAG,SAASA,UAAT,CAAoBP,MAApB,EAA4BC,IAA5B,EAAkC;AACjD,MAAIC,OAAO,GAAGC,SAAS,CAACC,MAAV,GAAmB,CAAnB,IAAwBD,SAAS,CAAC,CAAD,CAAT,KAAiBE,SAAzC,GAAqDF,SAAS,CAAC,CAAD,CAA9D,GAAoEP,WAAlF;AACA,SAAOK,IAAI,CAACO,kBAAL,CAAwBR,MAAxB,EAAgCE,OAAhC,CAAP;AACD,CAHD;;AAKA,SAASH,UAAT,EAAqBQ,UAArB","sourcesContent":["var dateOptions = {\n  day: 'numeric',\n  month: 'short',\n  year: 'numeric'\n};\nvar timeOptions = {\n  hour: '2-digit',\n  minute: '2-digit'\n};\n\nvar dateFormat = function dateFormat(locale, date) {\n  var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : dateOptions;\n  return date.toLocaleDateString(locale, options);\n};\n\nvar timeFormat = function timeFormat(locale, date) {\n  var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : timeOptions;\n  return date.toLocaleTimeString(locale, options);\n};\n\nexport { dateFormat, timeFormat };"]},"metadata":{},"sourceType":"module"}