{"ast":null,"code":"import useMediaQuery from '../../../hooks/useMediaQuery';\nvar map = {\n  small: 600,\n  medium: 960,\n  large: 1280,\n  xl: 1600,\n  xxl: 1920\n};\nexport default (function (from, to) {\n  var _useMediaQuery;\n\n  var matchArray = [];\n\n  if (from) {\n    matchArray.push(\"(min-width: \".concat(map[from], \"px)\"));\n  }\n\n  if (to) {\n    matchArray.push(\"(max-width: \".concat(map[to] - 1, \".9px)\"));\n  }\n\n  var matchString = matchArray.join(' and ');\n  return (_useMediaQuery = useMediaQuery(matchString)) !== null && _useMediaQuery !== void 0 ? _useMediaQuery : false;\n});","map":{"version":3,"sources":["C:/Users/aa883/workshop/node_modules/@intility/bifrost-react/es/components/Utility/Breakpoint/useBreakpoint.js"],"names":["useMediaQuery","map","small","medium","large","xl","xxl","from","to","_useMediaQuery","matchArray","push","concat","matchString","join"],"mappings":"AAAA,OAAOA,aAAP,MAA0B,8BAA1B;AACA,IAAIC,GAAG,GAAG;AACRC,EAAAA,KAAK,EAAE,GADC;AAERC,EAAAA,MAAM,EAAE,GAFA;AAGRC,EAAAA,KAAK,EAAE,IAHC;AAIRC,EAAAA,EAAE,EAAE,IAJI;AAKRC,EAAAA,GAAG,EAAE;AALG,CAAV;AAOA,gBAAgB,UAAUC,IAAV,EAAgBC,EAAhB,EAAoB;AAClC,MAAIC,cAAJ;;AAEA,MAAIC,UAAU,GAAG,EAAjB;;AAEA,MAAIH,IAAJ,EAAU;AACRG,IAAAA,UAAU,CAACC,IAAX,CAAgB,eAAeC,MAAf,CAAsBX,GAAG,CAACM,IAAD,CAAzB,EAAiC,KAAjC,CAAhB;AACD;;AAED,MAAIC,EAAJ,EAAQ;AACNE,IAAAA,UAAU,CAACC,IAAX,CAAgB,eAAeC,MAAf,CAAsBX,GAAG,CAACO,EAAD,CAAH,GAAU,CAAhC,EAAmC,OAAnC,CAAhB;AACD;;AAED,MAAIK,WAAW,GAAGH,UAAU,CAACI,IAAX,CAAgB,OAAhB,CAAlB;AACA,SAAO,CAACL,cAAc,GAAGT,aAAa,CAACa,WAAD,CAA/B,MAAkD,IAAlD,IAA0DJ,cAAc,KAAK,KAAK,CAAlF,GAAsFA,cAAtF,GAAuG,KAA9G;AACD,CAfD","sourcesContent":["import useMediaQuery from '../../../hooks/useMediaQuery';\nvar map = {\n  small: 600,\n  medium: 960,\n  large: 1280,\n  xl: 1600,\n  xxl: 1920\n};\nexport default (function (from, to) {\n  var _useMediaQuery;\n\n  var matchArray = [];\n\n  if (from) {\n    matchArray.push(\"(min-width: \".concat(map[from], \"px)\"));\n  }\n\n  if (to) {\n    matchArray.push(\"(max-width: \".concat(map[to] - 1, \".9px)\"));\n  }\n\n  var matchString = matchArray.join(' and ');\n  return (_useMediaQuery = useMediaQuery(matchString)) !== null && _useMediaQuery !== void 0 ? _useMediaQuery : false;\n});"]},"metadata":{},"sourceType":"module"}