{"ast":null,"code":"function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nimport React, { forwardRef } from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\nimport { faSquare, faCircle } from '@fortawesome/free-regular-svg-icons';\nimport { faCheckSquare, faDotCircle } from '@fortawesome/free-solid-svg-icons';\nimport Icon from '../../Visual/Icon';\nimport useUniqueId from '../../../hooks/useUniqueId';\n/**\n * A card rendered as a Checkbox or Radio button\n */\n\nvar CheckboxCard = /*#__PURE__*/forwardRef(function (_ref, ref) {\n  var _ref$type = _ref.type,\n      type = _ref$type === void 0 ? 'checkbox' : _ref$type,\n      label = _ref.label,\n      children = _ref.children,\n      checked = _ref.checked,\n      _ref$id = _ref.id,\n      id = _ref$id === void 0 ? '' : _ref$id,\n      _ref$disabled = _ref.disabled,\n      disabled = _ref$disabled === void 0 ? false : _ref$disabled,\n      className = _ref.className,\n      header = _ref.header,\n      props = _objectWithoutProperties(_ref, [\"type\", \"label\", \"children\", \"checked\", \"id\", \"disabled\", \"className\", \"header\"]);\n\n  var checkboxId = useUniqueId(id);\n  var isRadio = type === 'radio';\n  var icon = checked ? faCheckSquare : faSquare;\n  if (isRadio) icon = checked ? faDotCircle : faCircle;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: classnames('bf-checkboxcard-wrapper', className)\n  }, /*#__PURE__*/React.createElement(\"input\", _extends({\n    id: checkboxId,\n    className: \"bf-checkboxcard-input\",\n    type: isRadio ? 'radio' : 'checkbox',\n    checked: checked,\n    ref: ref,\n    disabled: disabled,\n    \"data-testid\": \"bf-checkboxcard-input\"\n  }, props)), /*#__PURE__*/React.createElement(\"label\", {\n    className: \"bf-checkboxcard-label\",\n    htmlFor: checkboxId,\n    \"data-testid\": \"bf-checkboxcard-label\"\n  }, header && /*#__PURE__*/React.createElement(\"header\", {\n    className: \"bf-checkboxcard-header\"\n  }, header), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"bf-checkboxcard-content\"\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"bf-checkboxcard-label-text\"\n  }, label, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"bf-checkboxcard-icon\",\n    \"data-testid\": \"bf-checkboxcard-icon\"\n  }, /*#__PURE__*/React.createElement(Icon, {\n    fixedWidth: true,\n    icon: icon\n  }))), children)));\n});\nCheckboxCard.propTypes = {\n  /** Label text or content shown as title */\n  label: PropTypes.oneOfType([PropTypes.string, PropTypes.element]).isRequired,\n\n  /** CheckboxCard type: `checkbox` (default) or `radio` */\n  type: PropTypes.oneOf(['checkbox', 'radio']),\n\n  /** CheckboxCard content */\n  children: PropTypes.node,\n\n  /** Checked state */\n  checked: PropTypes.bool,\n\n  /** Unique id for input and label */\n  id: PropTypes.string,\n\n  /** CSS class name(s) */\n  className: PropTypes.string,\n\n  /** Disable the component */\n  disabled: PropTypes.bool,\n\n  /** Optional header content */\n  header: PropTypes.element\n};\nCheckboxCard.displayName = 'CheckboxCard';\nexport default CheckboxCard;","map":{"version":3,"sources":["C:/Users/aa883/OneDrive - Intility AS/koding/oppgave_uke_46/Praktikant_Uke_46_bifrost/node_modules/@intility/bifrost-react/es/components/Inputs/CheckboxCard/CheckboxCard.js"],"names":["_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","_objectWithoutProperties","excluded","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","indexOf","propertyIsEnumerable","sourceKeys","keys","React","forwardRef","PropTypes","classnames","faSquare","faCircle","faCheckSquare","faDotCircle","Icon","useUniqueId","CheckboxCard","_ref","ref","_ref$type","type","label","children","checked","_ref$id","id","_ref$disabled","disabled","className","header","props","checkboxId","isRadio","icon","createElement","htmlFor","fixedWidth","propTypes","oneOfType","string","element","isRequired","oneOf","node","bool","displayName"],"mappings":"AAAA,SAASA,QAAT,GAAoB;AAAEA,EAAAA,QAAQ,GAAGC,MAAM,CAACC,MAAP,IAAiB,UAAUC,MAAV,EAAkB;AAAE,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGC,SAAS,CAACC,MAA9B,EAAsCF,CAAC,EAAvC,EAA2C;AAAE,UAAIG,MAAM,GAAGF,SAAS,CAACD,CAAD,CAAtB;;AAA2B,WAAK,IAAII,GAAT,IAAgBD,MAAhB,EAAwB;AAAE,YAAIN,MAAM,CAACQ,SAAP,CAAiBC,cAAjB,CAAgCC,IAAhC,CAAqCJ,MAArC,EAA6CC,GAA7C,CAAJ,EAAuD;AAAEL,UAAAA,MAAM,CAACK,GAAD,CAAN,GAAcD,MAAM,CAACC,GAAD,CAApB;AAA4B;AAAE;AAAE;;AAAC,WAAOL,MAAP;AAAgB,GAA5P;;AAA8P,SAAOH,QAAQ,CAACY,KAAT,CAAe,IAAf,EAAqBP,SAArB,CAAP;AAAyC;;AAE7T,SAASQ,wBAAT,CAAkCN,MAAlC,EAA0CO,QAA1C,EAAoD;AAAE,MAAIP,MAAM,IAAI,IAAd,EAAoB,OAAO,EAAP;;AAAW,MAAIJ,MAAM,GAAGY,6BAA6B,CAACR,MAAD,EAASO,QAAT,CAA1C;;AAA8D,MAAIN,GAAJ,EAASJ,CAAT;;AAAY,MAAIH,MAAM,CAACe,qBAAX,EAAkC;AAAE,QAAIC,gBAAgB,GAAGhB,MAAM,CAACe,qBAAP,CAA6BT,MAA7B,CAAvB;;AAA6D,SAAKH,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAGa,gBAAgB,CAACX,MAAjC,EAAyCF,CAAC,EAA1C,EAA8C;AAAEI,MAAAA,GAAG,GAAGS,gBAAgB,CAACb,CAAD,CAAtB;AAA2B,UAAIU,QAAQ,CAACI,OAAT,CAAiBV,GAAjB,KAAyB,CAA7B,EAAgC;AAAU,UAAI,CAACP,MAAM,CAACQ,SAAP,CAAiBU,oBAAjB,CAAsCR,IAAtC,CAA2CJ,MAA3C,EAAmDC,GAAnD,CAAL,EAA8D;AAAUL,MAAAA,MAAM,CAACK,GAAD,CAAN,GAAcD,MAAM,CAACC,GAAD,CAApB;AAA4B;AAAE;;AAAC,SAAOL,MAAP;AAAgB;;AAE5e,SAASY,6BAAT,CAAuCR,MAAvC,EAA+CO,QAA/C,EAAyD;AAAE,MAAIP,MAAM,IAAI,IAAd,EAAoB,OAAO,EAAP;AAAW,MAAIJ,MAAM,GAAG,EAAb;AAAiB,MAAIiB,UAAU,GAAGnB,MAAM,CAACoB,IAAP,CAAYd,MAAZ,CAAjB;AAAsC,MAAIC,GAAJ,EAASJ,CAAT;;AAAY,OAAKA,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAGgB,UAAU,CAACd,MAA3B,EAAmCF,CAAC,EAApC,EAAwC;AAAEI,IAAAA,GAAG,GAAGY,UAAU,CAAChB,CAAD,CAAhB;AAAqB,QAAIU,QAAQ,CAACI,OAAT,CAAiBV,GAAjB,KAAyB,CAA7B,EAAgC;AAAUL,IAAAA,MAAM,CAACK,GAAD,CAAN,GAAcD,MAAM,CAACC,GAAD,CAApB;AAA4B;;AAAC,SAAOL,MAAP;AAAgB;;AAEnT,OAAOmB,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,SAASC,QAAT,EAAmBC,QAAnB,QAAmC,qCAAnC;AACA,SAASC,aAAT,EAAwBC,WAAxB,QAA2C,mCAA3C;AACA,OAAOC,IAAP,MAAiB,mBAAjB;AACA,OAAOC,WAAP,MAAwB,4BAAxB;AAEA;AACA;AACA;;AACA,IAAIC,YAAY,GAAG,aAAaT,UAAU,CAAC,UAAUU,IAAV,EAAgBC,GAAhB,EAAqB;AAC9D,MAAIC,SAAS,GAAGF,IAAI,CAACG,IAArB;AAAA,MACIA,IAAI,GAAGD,SAAS,KAAK,KAAK,CAAnB,GAAuB,UAAvB,GAAoCA,SAD/C;AAAA,MAEIE,KAAK,GAAGJ,IAAI,CAACI,KAFjB;AAAA,MAGIC,QAAQ,GAAGL,IAAI,CAACK,QAHpB;AAAA,MAIIC,OAAO,GAAGN,IAAI,CAACM,OAJnB;AAAA,MAKIC,OAAO,GAAGP,IAAI,CAACQ,EALnB;AAAA,MAMIA,EAAE,GAAGD,OAAO,KAAK,KAAK,CAAjB,GAAqB,EAArB,GAA0BA,OANnC;AAAA,MAOIE,aAAa,GAAGT,IAAI,CAACU,QAPzB;AAAA,MAQIA,QAAQ,GAAGD,aAAa,KAAK,KAAK,CAAvB,GAA2B,KAA3B,GAAmCA,aARlD;AAAA,MASIE,SAAS,GAAGX,IAAI,CAACW,SATrB;AAAA,MAUIC,MAAM,GAAGZ,IAAI,CAACY,MAVlB;AAAA,MAWIC,KAAK,GAAGjC,wBAAwB,CAACoB,IAAD,EAAO,CAAC,MAAD,EAAS,OAAT,EAAkB,UAAlB,EAA8B,SAA9B,EAAyC,IAAzC,EAA+C,UAA/C,EAA2D,WAA3D,EAAwE,QAAxE,CAAP,CAXpC;;AAaA,MAAIc,UAAU,GAAGhB,WAAW,CAACU,EAAD,CAA5B;AACA,MAAIO,OAAO,GAAGZ,IAAI,KAAK,OAAvB;AACA,MAAIa,IAAI,GAAGV,OAAO,GAAGX,aAAH,GAAmBF,QAArC;AACA,MAAIsB,OAAJ,EAAaC,IAAI,GAAGV,OAAO,GAAGV,WAAH,GAAiBF,QAA/B;AACb,SAAO,aAAaL,KAAK,CAAC4B,aAAN,CAAoB,KAApB,EAA2B;AAC7CN,IAAAA,SAAS,EAAEnB,UAAU,CAAC,yBAAD,EAA4BmB,SAA5B;AADwB,GAA3B,EAEjB,aAAatB,KAAK,CAAC4B,aAAN,CAAoB,OAApB,EAA6BlD,QAAQ,CAAC;AACpDyC,IAAAA,EAAE,EAAEM,UADgD;AAEpDH,IAAAA,SAAS,EAAE,uBAFyC;AAGpDR,IAAAA,IAAI,EAAEY,OAAO,GAAG,OAAH,GAAa,UAH0B;AAIpDT,IAAAA,OAAO,EAAEA,OAJ2C;AAKpDL,IAAAA,GAAG,EAAEA,GAL+C;AAMpDS,IAAAA,QAAQ,EAAEA,QAN0C;AAOpD,mBAAe;AAPqC,GAAD,EAQlDG,KARkD,CAArC,CAFI,EAUR,aAAaxB,KAAK,CAAC4B,aAAN,CAAoB,OAApB,EAA6B;AACpDN,IAAAA,SAAS,EAAE,uBADyC;AAEpDO,IAAAA,OAAO,EAAEJ,UAF2C;AAGpD,mBAAe;AAHqC,GAA7B,EAItBF,MAAM,IAAI,aAAavB,KAAK,CAAC4B,aAAN,CAAoB,QAApB,EAA8B;AACtDN,IAAAA,SAAS,EAAE;AAD2C,GAA9B,EAEvBC,MAFuB,CAJD,EAMb,aAAavB,KAAK,CAAC4B,aAAN,CAAoB,KAApB,EAA2B;AAClDN,IAAAA,SAAS,EAAE;AADuC,GAA3B,EAEtB,aAAatB,KAAK,CAAC4B,aAAN,CAAoB,MAApB,EAA4B;AAC1CN,IAAAA,SAAS,EAAE;AAD+B,GAA5B,EAEbP,KAFa,EAEN,aAAaf,KAAK,CAAC4B,aAAN,CAAoB,MAApB,EAA4B;AACjDN,IAAAA,SAAS,EAAE,sBADsC;AAEjD,mBAAe;AAFkC,GAA5B,EAGpB,aAAatB,KAAK,CAAC4B,aAAN,CAAoBpB,IAApB,EAA0B;AACxCsB,IAAAA,UAAU,EAAE,IAD4B;AAExCH,IAAAA,IAAI,EAAEA;AAFkC,GAA1B,CAHO,CAFP,CAFS,EAUnBX,QAVmB,CANA,CAVL,CAApB;AA2BD,CA7CyC,CAA1C;AA8CAN,YAAY,CAACqB,SAAb,GAAyB;AACvB;AACAhB,EAAAA,KAAK,EAAEb,SAAS,CAAC8B,SAAV,CAAoB,CAAC9B,SAAS,CAAC+B,MAAX,EAAmB/B,SAAS,CAACgC,OAA7B,CAApB,EAA2DC,UAF3C;;AAIvB;AACArB,EAAAA,IAAI,EAAEZ,SAAS,CAACkC,KAAV,CAAgB,CAAC,UAAD,EAAa,OAAb,CAAhB,CALiB;;AAOvB;AACApB,EAAAA,QAAQ,EAAEd,SAAS,CAACmC,IARG;;AAUvB;AACApB,EAAAA,OAAO,EAAEf,SAAS,CAACoC,IAXI;;AAavB;AACAnB,EAAAA,EAAE,EAAEjB,SAAS,CAAC+B,MAdS;;AAgBvB;AACAX,EAAAA,SAAS,EAAEpB,SAAS,CAAC+B,MAjBE;;AAmBvB;AACAZ,EAAAA,QAAQ,EAAEnB,SAAS,CAACoC,IApBG;;AAsBvB;AACAf,EAAAA,MAAM,EAAErB,SAAS,CAACgC;AAvBK,CAAzB;AAyBAxB,YAAY,CAAC6B,WAAb,GAA2B,cAA3B;AACA,eAAe7B,YAAf","sourcesContent":["function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React, { forwardRef } from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\nimport { faSquare, faCircle } from '@fortawesome/free-regular-svg-icons';\nimport { faCheckSquare, faDotCircle } from '@fortawesome/free-solid-svg-icons';\nimport Icon from '../../Visual/Icon';\nimport useUniqueId from '../../../hooks/useUniqueId';\n\n/**\n * A card rendered as a Checkbox or Radio button\n */\nvar CheckboxCard = /*#__PURE__*/forwardRef(function (_ref, ref) {\n  var _ref$type = _ref.type,\n      type = _ref$type === void 0 ? 'checkbox' : _ref$type,\n      label = _ref.label,\n      children = _ref.children,\n      checked = _ref.checked,\n      _ref$id = _ref.id,\n      id = _ref$id === void 0 ? '' : _ref$id,\n      _ref$disabled = _ref.disabled,\n      disabled = _ref$disabled === void 0 ? false : _ref$disabled,\n      className = _ref.className,\n      header = _ref.header,\n      props = _objectWithoutProperties(_ref, [\"type\", \"label\", \"children\", \"checked\", \"id\", \"disabled\", \"className\", \"header\"]);\n\n  var checkboxId = useUniqueId(id);\n  var isRadio = type === 'radio';\n  var icon = checked ? faCheckSquare : faSquare;\n  if (isRadio) icon = checked ? faDotCircle : faCircle;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: classnames('bf-checkboxcard-wrapper', className)\n  }, /*#__PURE__*/React.createElement(\"input\", _extends({\n    id: checkboxId,\n    className: \"bf-checkboxcard-input\",\n    type: isRadio ? 'radio' : 'checkbox',\n    checked: checked,\n    ref: ref,\n    disabled: disabled,\n    \"data-testid\": \"bf-checkboxcard-input\"\n  }, props)), /*#__PURE__*/React.createElement(\"label\", {\n    className: \"bf-checkboxcard-label\",\n    htmlFor: checkboxId,\n    \"data-testid\": \"bf-checkboxcard-label\"\n  }, header && /*#__PURE__*/React.createElement(\"header\", {\n    className: \"bf-checkboxcard-header\"\n  }, header), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"bf-checkboxcard-content\"\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"bf-checkboxcard-label-text\"\n  }, label, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"bf-checkboxcard-icon\",\n    \"data-testid\": \"bf-checkboxcard-icon\"\n  }, /*#__PURE__*/React.createElement(Icon, {\n    fixedWidth: true,\n    icon: icon\n  }))), children)));\n});\nCheckboxCard.propTypes = {\n  /** Label text or content shown as title */\n  label: PropTypes.oneOfType([PropTypes.string, PropTypes.element]).isRequired,\n\n  /** CheckboxCard type: `checkbox` (default) or `radio` */\n  type: PropTypes.oneOf(['checkbox', 'radio']),\n\n  /** CheckboxCard content */\n  children: PropTypes.node,\n\n  /** Checked state */\n  checked: PropTypes.bool,\n\n  /** Unique id for input and label */\n  id: PropTypes.string,\n\n  /** CSS class name(s) */\n  className: PropTypes.string,\n\n  /** Disable the component */\n  disabled: PropTypes.bool,\n\n  /** Optional header content */\n  header: PropTypes.element\n};\nCheckboxCard.displayName = 'CheckboxCard';\nexport default CheckboxCard;"]},"metadata":{},"sourceType":"module"}