{"ast":null,"code":"function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n/* eslint-disable @typescript-eslint/ban-ts-ignore */\n\n\nimport React, { useRef, forwardRef } from 'react';\nimport PropTypes from 'prop-types';\nimport { faExclamationTriangle, faCheck } from '@fortawesome/free-solid-svg-icons';\nimport classNames from 'classnames';\nimport { StateArray } from '../../../types';\nimport Icon from '../../Visual/Icon';\nimport setRef from '../../../utils/setRef';\nimport triggerOnChange from '../../../utils/triggerOnChange';\nimport { faTimes } from '../../../assets/faTimes';\nimport { Description, Feedback } from '../common';\nimport useUniqueId from '../../../hooks/useUniqueId';\nimport Label from '../Label';\nimport { fadSpinnerThird } from '../../../assets';\n/**\n * Text input field\n */\n\nvar Input = /*#__PURE__*/forwardRef(function (_ref, _ref2) {\n  var _inputRef$current;\n\n  var label = _ref.label,\n      hideLabel = _ref.hideLabel,\n      icon = _ref.icon,\n      iconProps = _ref.iconProps,\n      rightIcon = _ref.rightIcon,\n      className = _ref.className,\n      id = _ref.id,\n      disabled = _ref.disabled,\n      state = _ref.state,\n      feedback = _ref.feedback,\n      required = _ref.required,\n      description = _ref.description,\n      requiredNoLabel = _ref.requiredNoLabel,\n      optional = _ref.optional,\n      variant = _ref.variant,\n      clearable = _ref.clearable,\n      loading = _ref.loading,\n      onIconClick = _ref.onIconClick,\n      iconButton = _ref.iconButton,\n      containerProps = _ref.containerProps,\n      props = _objectWithoutProperties(_ref, [\"label\", \"hideLabel\", \"icon\", \"iconProps\", \"rightIcon\", \"className\", \"id\", \"disabled\", \"state\", \"feedback\", \"required\", \"description\", \"requiredNoLabel\", \"optional\", \"variant\", \"clearable\", \"loading\", \"onIconClick\", \"iconButton\", \"containerProps\"]);\n\n  var inputId = useUniqueId(id);\n  var isOutline = variant === 'outline';\n  var hasState = !!state && state !== 'theme';\n  var hasIcon = !!icon || !!(iconProps !== null && iconProps !== void 0 && iconProps.icon);\n  var inputRef = useRef(null);\n\n  var handleClear = function handleClear() {\n    if (disabled) return;\n\n    if (inputRef.current) {\n      triggerOnChange(inputRef.current, '');\n      inputRef.current.focus();\n    }\n  };\n\n  var inputIcon = null;\n\n  if (hasIcon && !(hasState && rightIcon)) {\n    inputIcon = /*#__PURE__*/React.createElement(Icon // @ts-ignore\n    , _extends({\n      icon: loading ? fadSpinnerThird : icon,\n      spin: loading,\n      fixedWidth: true\n    }, iconProps, {\n      className: classNames(iconProps === null || iconProps === void 0 ? void 0 : iconProps.className, {\n        'bf-input-loading-icon': loading\n      }),\n      \"data-testid\": \"bf-input-icon\"\n    }));\n    inputIcon = onIconClick ? /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      className: \"bf-input-icon bf-input-icon-button\",\n      onClick: onIconClick,\n      disabled: disabled\n    }, inputIcon) : /*#__PURE__*/React.createElement(\"span\", {\n      className: classNames(iconProps === null || iconProps === void 0 ? void 0 : iconProps.className, 'bf-input-icon')\n    }, inputIcon);\n  } else if (loading) {\n    inputIcon = /*#__PURE__*/React.createElement(\"span\", {\n      className: \"bf-input-icon\"\n    }, /*#__PURE__*/React.createElement(Icon, {\n      icon: fadSpinnerThird,\n      fixedWidth: true,\n      spin: true,\n      className: \"bf-input-loading-icon\"\n    }));\n    rightIcon = true;\n    hasState = false;\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", _extends({}, containerProps, {\n    /* spread first so we can override className */\n    className: classNames('bf-input-container', containerProps === null || containerProps === void 0 ? void 0 : containerProps.className, {\n      'bf-input-disabled': disabled,\n      'bf-input-success': state === 'success' && !isOutline,\n      'bf-input-warning': state === 'warning' && !isOutline,\n      'bf-input-alert': state === 'alert' && !isOutline\n    }),\n    \"data-testid\": \"bf-input-container\"\n  }), !hideLabel && /*#__PURE__*/React.createElement(Label, {\n    htmlFor: inputId,\n    required: !disabled && required && !requiredNoLabel,\n    optional: optional,\n    disabled: disabled\n  }, label), description && /*#__PURE__*/React.createElement(Description, null, description), /*#__PURE__*/React.createElement(\"div\", {\n    className: classNames('bf-input-icon-container', {\n      'bf-input-icon-right': !hasState && inputIcon && rightIcon,\n      'bf-input-icon-left': inputIcon && !rightIcon,\n      'bf-input-icon-state': hasState && !isOutline,\n      'bf-input-outline': isOutline,\n      'bf-input-clearable': clearable,\n      'bf-input-icon-button-filled': iconButton\n    }),\n    \"data-testid\": \"bf-input-icon-container\"\n  }, /*#__PURE__*/React.createElement(\"input\", _extends({\n    id: inputId,\n    className: classNames(className, 'bf-input', {\n      'bf-input-state-only': hasState && !inputIcon\n    }),\n    disabled: disabled,\n    required: !disabled && (required || requiredNoLabel)\n  }, hideLabel && {\n    'aria-label': label\n  }, {\n    ref: function ref(r) {\n      setRef(_ref2, r);\n      setRef(inputRef, r);\n    },\n    autoComplete: \"noAutocomplete\"\n  }, props)), inputIcon, clearable && (props.value || ((_inputRef$current = inputRef.current) === null || _inputRef$current === void 0 ? void 0 : _inputRef$current.value)) && /*#__PURE__*/React.createElement(\"span\", {\n    className: \"bf-input-clear-icon\",\n    onClick: function onClick() {\n      return handleClear();\n    }\n  }, /*#__PURE__*/React.createElement(Icon, {\n    icon: faTimes\n  })), hasState && !isOutline && /*#__PURE__*/React.createElement(\"span\", {\n    className: \"bf-state-icon\"\n  }, /*#__PURE__*/React.createElement(Icon, {\n    fixedWidth: true,\n    icon: state === 'alert' || state === 'warning' ? faExclamationTriangle : faCheck\n  }))), typeof feedback === 'string' && /*#__PURE__*/React.createElement(Feedback, null, feedback || \"\\xA0\"));\n}); //@ts-ignore\n\nInput.propTypes = {\n  /** Required label text */\n  label: PropTypes.string.isRequired,\n\n  /** Hide label text, will add label prop as aria-label for screen readers */\n  hideLabel: PropTypes.bool,\n\n  /** Font Awesome icon reference (or string if using library) */\n  //@ts-ignore\n  icon: PropTypes.oneOfType([PropTypes.object, PropTypes.array, PropTypes.string]),\n\n  /** Icon position. Default is left side */\n  rightIcon: PropTypes.bool,\n\n  /** CSS class name(s) */\n  className: PropTypes.string,\n\n  /** Unique id for input and label */\n  id: PropTypes.string,\n\n  /** Disables the input field */\n  disabled: PropTypes.bool,\n\n  /** Available states: `theme` (default), `success`, `warning`, and `alert` */\n  state: PropTypes.oneOf(StateArray),\n\n  /** Feedback text below the input field */\n  feedback: PropTypes.oneOfType([PropTypes.string, PropTypes.node]),\n\n  /** Required prop indicating mandatory field */\n  required: PropTypes.bool,\n\n  /** Description text to show more information */\n  description: PropTypes.string,\n\n  /** Bool to mark input required, but hides the required label */\n  requiredNoLabel: PropTypes.bool,\n\n  /** Marks input as optional */\n  optional: PropTypes.bool,\n\n  /** Available variants: 'basic' (default), and 'outline' */\n  variant: PropTypes.oneOf(['basic', 'outline']),\n\n  /** Display a clickable 'x' to clear the field */\n  clearable: PropTypes.bool,\n\n  /** Display a loading spinner in the input */\n  loading: PropTypes.bool,\n\n  /** @ignore */\n  value: PropTypes.any,\n\n  /** Props for the containing `div` element */\n  containerProps: PropTypes.object,\n\n  /** Icon component props */\n  //@ts-ignore\n  iconProps: PropTypes.shape({\n    icon: PropTypes.oneOfType([PropTypes.object, PropTypes.array, PropTypes.string]),\n    className: PropTypes.string,\n    onClick: PropTypes.func\n  }),\n\n  /** onClick handler for icon */\n  onIconClick: PropTypes.func,\n\n  /** Display icon as filled button */\n  iconButton: PropTypes.bool\n};\nInput.defaultProps = {\n  variant: 'basic'\n};\nInput.displayName = 'Input';\nexport default Input;","map":{"version":3,"sources":["C:/Users/aa883/workshop/node_modules/@intility/bifrost-react/es/components/Inputs/Input/Input.js"],"names":["_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","_objectWithoutProperties","excluded","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","indexOf","propertyIsEnumerable","sourceKeys","keys","React","useRef","forwardRef","PropTypes","faExclamationTriangle","faCheck","classNames","StateArray","Icon","setRef","triggerOnChange","faTimes","Description","Feedback","useUniqueId","Label","fadSpinnerThird","Input","_ref","_ref2","_inputRef$current","label","hideLabel","icon","iconProps","rightIcon","className","id","disabled","state","feedback","required","description","requiredNoLabel","optional","variant","clearable","loading","onIconClick","iconButton","containerProps","props","inputId","isOutline","hasState","hasIcon","inputRef","handleClear","current","focus","inputIcon","createElement","spin","fixedWidth","type","onClick","htmlFor","ref","r","autoComplete","value","propTypes","string","isRequired","bool","oneOfType","object","array","oneOf","node","any","shape","func","defaultProps","displayName"],"mappings":"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","sourcesContent":["function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* eslint-disable @typescript-eslint/ban-ts-ignore */\nimport React, { useRef, forwardRef } from 'react';\nimport PropTypes from 'prop-types';\nimport { faExclamationTriangle, faCheck } from '@fortawesome/free-solid-svg-icons';\nimport classNames from 'classnames';\nimport { StateArray } from '../../../types';\nimport Icon from '../../Visual/Icon';\nimport setRef from '../../../utils/setRef';\nimport triggerOnChange from '../../../utils/triggerOnChange';\nimport { faTimes } from '../../../assets/faTimes';\nimport { Description, Feedback } from '../common';\nimport useUniqueId from '../../../hooks/useUniqueId';\nimport Label from '../Label';\nimport { fadSpinnerThird } from '../../../assets';\n\n/**\n * Text input field\n */\nvar Input = /*#__PURE__*/forwardRef(function (_ref, _ref2) {\n  var _inputRef$current;\n\n  var label = _ref.label,\n      hideLabel = _ref.hideLabel,\n      icon = _ref.icon,\n      iconProps = _ref.iconProps,\n      rightIcon = _ref.rightIcon,\n      className = _ref.className,\n      id = _ref.id,\n      disabled = _ref.disabled,\n      state = _ref.state,\n      feedback = _ref.feedback,\n      required = _ref.required,\n      description = _ref.description,\n      requiredNoLabel = _ref.requiredNoLabel,\n      optional = _ref.optional,\n      variant = _ref.variant,\n      clearable = _ref.clearable,\n      loading = _ref.loading,\n      onIconClick = _ref.onIconClick,\n      iconButton = _ref.iconButton,\n      containerProps = _ref.containerProps,\n      props = _objectWithoutProperties(_ref, [\"label\", \"hideLabel\", \"icon\", \"iconProps\", \"rightIcon\", \"className\", \"id\", \"disabled\", \"state\", \"feedback\", \"required\", \"description\", \"requiredNoLabel\", \"optional\", \"variant\", \"clearable\", \"loading\", \"onIconClick\", \"iconButton\", \"containerProps\"]);\n\n  var inputId = useUniqueId(id);\n  var isOutline = variant === 'outline';\n  var hasState = !!state && state !== 'theme';\n  var hasIcon = !!icon || !!(iconProps !== null && iconProps !== void 0 && iconProps.icon);\n  var inputRef = useRef(null);\n\n  var handleClear = function handleClear() {\n    if (disabled) return;\n\n    if (inputRef.current) {\n      triggerOnChange(inputRef.current, '');\n      inputRef.current.focus();\n    }\n  };\n\n  var inputIcon = null;\n\n  if (hasIcon && !(hasState && rightIcon)) {\n    inputIcon = /*#__PURE__*/React.createElement(Icon // @ts-ignore\n    , _extends({\n      icon: loading ? fadSpinnerThird : icon,\n      spin: loading,\n      fixedWidth: true\n    }, iconProps, {\n      className: classNames(iconProps === null || iconProps === void 0 ? void 0 : iconProps.className, {\n        'bf-input-loading-icon': loading\n      }),\n      \"data-testid\": \"bf-input-icon\"\n    }));\n    inputIcon = onIconClick ? /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      className: \"bf-input-icon bf-input-icon-button\",\n      onClick: onIconClick,\n      disabled: disabled\n    }, inputIcon) : /*#__PURE__*/React.createElement(\"span\", {\n      className: classNames(iconProps === null || iconProps === void 0 ? void 0 : iconProps.className, 'bf-input-icon')\n    }, inputIcon);\n  } else if (loading) {\n    inputIcon = /*#__PURE__*/React.createElement(\"span\", {\n      className: \"bf-input-icon\"\n    }, /*#__PURE__*/React.createElement(Icon, {\n      icon: fadSpinnerThird,\n      fixedWidth: true,\n      spin: true,\n      className: \"bf-input-loading-icon\"\n    }));\n    rightIcon = true;\n    hasState = false;\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", _extends({}, containerProps, {\n    /* spread first so we can override className */\n    className: classNames('bf-input-container', containerProps === null || containerProps === void 0 ? void 0 : containerProps.className, {\n      'bf-input-disabled': disabled,\n      'bf-input-success': state === 'success' && !isOutline,\n      'bf-input-warning': state === 'warning' && !isOutline,\n      'bf-input-alert': state === 'alert' && !isOutline\n    }),\n    \"data-testid\": \"bf-input-container\"\n  }), !hideLabel && /*#__PURE__*/React.createElement(Label, {\n    htmlFor: inputId,\n    required: !disabled && required && !requiredNoLabel,\n    optional: optional,\n    disabled: disabled\n  }, label), description && /*#__PURE__*/React.createElement(Description, null, description), /*#__PURE__*/React.createElement(\"div\", {\n    className: classNames('bf-input-icon-container', {\n      'bf-input-icon-right': !hasState && inputIcon && rightIcon,\n      'bf-input-icon-left': inputIcon && !rightIcon,\n      'bf-input-icon-state': hasState && !isOutline,\n      'bf-input-outline': isOutline,\n      'bf-input-clearable': clearable,\n      'bf-input-icon-button-filled': iconButton\n    }),\n    \"data-testid\": \"bf-input-icon-container\"\n  }, /*#__PURE__*/React.createElement(\"input\", _extends({\n    id: inputId,\n    className: classNames(className, 'bf-input', {\n      'bf-input-state-only': hasState && !inputIcon\n    }),\n    disabled: disabled,\n    required: !disabled && (required || requiredNoLabel)\n  }, hideLabel && {\n    'aria-label': label\n  }, {\n    ref: function ref(r) {\n      setRef(_ref2, r);\n      setRef(inputRef, r);\n    },\n    autoComplete: \"noAutocomplete\"\n  }, props)), inputIcon, clearable && (props.value || ((_inputRef$current = inputRef.current) === null || _inputRef$current === void 0 ? void 0 : _inputRef$current.value)) && /*#__PURE__*/React.createElement(\"span\", {\n    className: \"bf-input-clear-icon\",\n    onClick: function onClick() {\n      return handleClear();\n    }\n  }, /*#__PURE__*/React.createElement(Icon, {\n    icon: faTimes\n  })), hasState && !isOutline && /*#__PURE__*/React.createElement(\"span\", {\n    className: \"bf-state-icon\"\n  }, /*#__PURE__*/React.createElement(Icon, {\n    fixedWidth: true,\n    icon: state === 'alert' || state === 'warning' ? faExclamationTriangle : faCheck\n  }))), typeof feedback === 'string' && /*#__PURE__*/React.createElement(Feedback, null, feedback || \"\\xA0\"));\n}); //@ts-ignore\n\nInput.propTypes = {\n  /** Required label text */\n  label: PropTypes.string.isRequired,\n\n  /** Hide label text, will add label prop as aria-label for screen readers */\n  hideLabel: PropTypes.bool,\n\n  /** Font Awesome icon reference (or string if using library) */\n  //@ts-ignore\n  icon: PropTypes.oneOfType([PropTypes.object, PropTypes.array, PropTypes.string]),\n\n  /** Icon position. Default is left side */\n  rightIcon: PropTypes.bool,\n\n  /** CSS class name(s) */\n  className: PropTypes.string,\n\n  /** Unique id for input and label */\n  id: PropTypes.string,\n\n  /** Disables the input field */\n  disabled: PropTypes.bool,\n\n  /** Available states: `theme` (default), `success`, `warning`, and `alert` */\n  state: PropTypes.oneOf(StateArray),\n\n  /** Feedback text below the input field */\n  feedback: PropTypes.oneOfType([PropTypes.string, PropTypes.node]),\n\n  /** Required prop indicating mandatory field */\n  required: PropTypes.bool,\n\n  /** Description text to show more information */\n  description: PropTypes.string,\n\n  /** Bool to mark input required, but hides the required label */\n  requiredNoLabel: PropTypes.bool,\n\n  /** Marks input as optional */\n  optional: PropTypes.bool,\n\n  /** Available variants: 'basic' (default), and 'outline' */\n  variant: PropTypes.oneOf(['basic', 'outline']),\n\n  /** Display a clickable 'x' to clear the field */\n  clearable: PropTypes.bool,\n\n  /** Display a loading spinner in the input */\n  loading: PropTypes.bool,\n\n  /** @ignore */\n  value: PropTypes.any,\n\n  /** Props for the containing `div` element */\n  containerProps: PropTypes.object,\n\n  /** Icon component props */\n  //@ts-ignore\n  iconProps: PropTypes.shape({\n    icon: PropTypes.oneOfType([PropTypes.object, PropTypes.array, PropTypes.string]),\n    className: PropTypes.string,\n    onClick: PropTypes.func\n  }),\n\n  /** onClick handler for icon */\n  onIconClick: PropTypes.func,\n\n  /** Display icon as filled button */\n  iconButton: PropTypes.bool\n};\nInput.defaultProps = {\n  variant: 'basic'\n};\nInput.displayName = 'Input';\nexport default Input;"]},"metadata":{},"sourceType":"module"}