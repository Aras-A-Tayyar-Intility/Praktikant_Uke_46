import React from 'react';
import { ForwardRefType, RestProps } from '../../../types';
export declare type SidebarProps = RestProps<'nav'> & {
    children: React.ReactNode | string;
    className?: string;
    appName?: string;
    collapsedAppName?: string;
    collapsible?: boolean;
    collapseLabel?: string;
    expandLabel?: string;
    enableDarkModeToggle?: boolean;
    darkLightLabel?: string;
    logoHref?: string;
    logoOnClick?: (event: React.MouseEvent<HTMLAnchorElement, MouseEvent>) => void;
};
declare const _default: ForwardRefType<HTMLElement, Pick<React.DetailedHTMLProps<React.HTMLAttributes<HTMLElement>, HTMLElement>, "key" | keyof React.HTMLAttributes<HTMLElement>> & {
    children: React.ReactNode;
    className?: string | undefined;
    appName?: string | undefined;
    collapsedAppName?: string | undefined;
    collapsible?: boolean | undefined;
    collapseLabel?: string | undefined;
    expandLabel?: string | undefined;
    enableDarkModeToggle?: boolean | undefined;
    darkLightLabel?: string | undefined;
    logoHref?: string | undefined;
    logoOnClick?: ((event: React.MouseEvent<HTMLAnchorElement, MouseEvent>) => void) | undefined;
} & React.RefAttributes<HTMLElement>, Required<React.ForwardRefExoticComponent<Pick<React.DetailedHTMLProps<React.HTMLAttributes<HTMLElement>, HTMLElement>, "key" | keyof React.HTMLAttributes<HTMLElement>> & {
    children: React.ReactNode;
    className?: string | undefined;
    appName?: string | undefined;
    collapsedAppName?: string | undefined;
    collapsible?: boolean | undefined;
    collapseLabel?: string | undefined;
    expandLabel?: string | undefined;
    enableDarkModeToggle?: boolean | undefined;
    darkLightLabel?: string | undefined;
    logoHref?: string | undefined;
    logoOnClick?: ((event: React.MouseEvent<HTMLAnchorElement, MouseEvent>) => void) | undefined;
} & React.RefAttributes<HTMLElement>> & {
    Item?: React.ForwardRefExoticComponent<Pick<React.DetailedHTMLProps<React.HTMLAttributes<HTMLDivElement>, HTMLDivElement>, "key" | keyof React.HTMLAttributes<HTMLDivElement>> & {
        icon?: import("@fortawesome/fontawesome-svg-core").IconProp | undefined;
        rightIcon?: import("@fortawesome/fontawesome-svg-core").IconProp | undefined;
    } & React.RefAttributes<HTMLDivElement>> | undefined;
    Group?: React.ForwardRefExoticComponent<Omit<React.DetailedHTMLProps<React.HTMLAttributes<HTMLDivElement>, HTMLDivElement>, "ref" | "children" | "name"> & {
        name: React.ReactChild | React.ReactFragment | React.ReactPortal;
        children: React.ReactElement<any, string | React.JSXElementConstructor<any>> | React.ReactElement<any, string | React.JSXElementConstructor<any>>[];
        active?: boolean | undefined;
        icon?: import("@fortawesome/fontawesome-svg-core").IconProp | undefined;
    } & React.RefAttributes<HTMLDivElement>> | undefined;
}>>;
export default _default;
