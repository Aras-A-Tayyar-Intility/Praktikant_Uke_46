import React, { KeyboardEvent, MouseEvent } from 'react';
import { RestProps } from '../../../types';
export declare type TagProps = Omit<RestProps<'button'>, 'onClick'> & {
    active?: boolean;
    variant?: 'basic' | 'compact';
    onClick: (event: MouseEvent<HTMLButtonElement> | KeyboardEvent<HTMLButtonElement>) => void;
};
declare const Tag: React.ForwardRefExoticComponent<Omit<Pick<React.DetailedHTMLProps<React.ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>, "key" | keyof React.ButtonHTMLAttributes<HTMLButtonElement>>, "onClick"> & {
    active?: boolean | undefined;
    variant?: "basic" | "compact" | undefined;
    onClick: (event: MouseEvent<HTMLButtonElement> | KeyboardEvent<HTMLButtonElement>) => void;
} & React.RefAttributes<HTMLButtonElement>>;
export default Tag;
