import React from 'react';
import { AccordionItemProps } from './Accordion.Item';
import { ForwardRefType, RestProps } from '../../../types';
export declare type AccordionProps = Omit<RestProps<'div'>, 'onChange'> & {
    active?: string;
    onChange?: (activeItem: string) => void;
    noBorder?: boolean;
    variant?: 'default' | 'styled';
    mode?: 'default' | 'responsive' | 'compact';
};
declare const _default: ForwardRefType<HTMLDivElement, Omit<Pick<React.DetailedHTMLProps<React.HTMLAttributes<HTMLDivElement>, HTMLDivElement>, "key" | keyof React.HTMLAttributes<HTMLDivElement>>, "onChange"> & {
    active?: string | undefined;
    onChange?: ((activeItem: string) => void) | undefined;
    noBorder?: boolean | undefined;
    variant?: "default" | "styled" | undefined;
    mode?: "default" | "responsive" | "compact" | undefined;
} & React.RefAttributes<HTMLDivElement>, Required<React.ForwardRefExoticComponent<Omit<Pick<React.DetailedHTMLProps<React.HTMLAttributes<HTMLDivElement>, HTMLDivElement>, "key" | keyof React.HTMLAttributes<HTMLDivElement>>, "onChange"> & {
    active?: string | undefined;
    onChange?: ((activeItem: string) => void) | undefined;
    noBorder?: boolean | undefined;
    variant?: "default" | "styled" | undefined;
    mode?: "default" | "responsive" | "compact" | undefined;
} & React.RefAttributes<HTMLDivElement>> & {
    Item?: React.ForwardRefExoticComponent<AccordionItemProps & React.RefAttributes<HTMLDivElement>> | undefined;
}>>;
export default _default;
