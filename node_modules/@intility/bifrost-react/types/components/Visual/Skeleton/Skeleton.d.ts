import React from 'react';
import PropTypes from 'prop-types';
export declare type SkeletonProps = {
    repeat?: number;
    children?: React.ReactNode;
};
declare const Skeleton: {
    ({ children, repeat }: SkeletonProps): JSX.Element;
    propTypes: {
        children: PropTypes.Requireable<PropTypes.ReactNodeLike>;
        repeat: PropTypes.Requireable<number>;
    };
    defaultProps: {
        repeat: number;
    };
    Rect: React.ForwardRefExoticComponent<Pick<React.DetailedHTMLProps<React.HTMLAttributes<HTMLDivElement>, HTMLDivElement>, "key" | keyof React.HTMLAttributes<HTMLDivElement>> & {
        width?: string | number | undefined;
        height?: string | number | undefined;
    } & React.RefAttributes<HTMLDivElement>>;
    CardImage: React.ForwardRefExoticComponent<Pick<React.DetailedHTMLProps<React.HTMLAttributes<HTMLDivElement>, HTMLDivElement>, "key" | keyof React.HTMLAttributes<HTMLDivElement>> & {
        width?: string | number | undefined;
        height?: string | number | undefined;
    } & React.RefAttributes<HTMLDivElement>>;
    Text: React.ForwardRefExoticComponent<Pick<React.DetailedHTMLProps<React.HTMLAttributes<HTMLSpanElement>, HTMLSpanElement>, "key" | keyof React.HTMLAttributes<HTMLSpanElement>> & {
        width?: string | number | undefined;
        height?: string | number | undefined;
    } & React.RefAttributes<HTMLSpanElement>>;
    displayName: string;
};
export default Skeleton;
