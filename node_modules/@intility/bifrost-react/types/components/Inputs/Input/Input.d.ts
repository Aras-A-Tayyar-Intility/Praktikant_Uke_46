import React from 'react';
import { IconProp } from '@fortawesome/fontawesome-svg-core';
import { RestProps, State } from '../../../types';
import { FontAwesomeIconProps } from '@fortawesome/react-fontawesome';
export declare type InputProps = RestProps<'input'> & {
    label: string;
    hideLabel?: boolean;
    icon?: IconProp;
    iconProps?: Omit<FontAwesomeIconProps, 'icon'> & {
        icon?: IconProp;
    };
    rightIcon?: boolean;
    state?: State;
    feedback?: string | React.ReactNode;
    description?: string;
    requiredNoLabel?: boolean;
    optional?: boolean;
    variant?: 'basic' | 'outline';
    clearable?: boolean;
    loading?: boolean;
    onIconClick?: () => void;
    iconButton?: boolean;
    containerProps?: JSX.IntrinsicElements['div'];
};
declare const Input: React.ForwardRefExoticComponent<Pick<React.DetailedHTMLProps<React.InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>, "key" | keyof React.InputHTMLAttributes<HTMLInputElement>> & {
    label: string;
    hideLabel?: boolean | undefined;
    icon?: IconProp | undefined;
    iconProps?: (Omit<FontAwesomeIconProps, "icon"> & {
        icon?: IconProp | undefined;
    }) | undefined;
    rightIcon?: boolean | undefined;
    state?: "inactive" | "neutral" | "theme" | "success" | "warning" | "alert" | undefined;
    feedback?: string | React.ReactNode;
    description?: string | undefined;
    requiredNoLabel?: boolean | undefined;
    optional?: boolean | undefined;
    variant?: "basic" | "outline" | undefined;
    clearable?: boolean | undefined;
    loading?: boolean | undefined;
    onIconClick?: (() => void) | undefined;
    iconButton?: boolean | undefined;
    containerProps?: React.DetailedHTMLProps<React.HTMLAttributes<HTMLDivElement>, HTMLDivElement> | undefined;
} & React.RefAttributes<HTMLInputElement>>;
export default Input;
