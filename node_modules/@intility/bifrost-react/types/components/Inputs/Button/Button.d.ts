import React from 'react';
import { IconProp } from '@fortawesome/fontawesome-svg-core';
import { ForwardRefType, RestProps, State } from '../../../types';
import { ButtonGroupProps } from './Button.Group';
export declare type ButtonProps = RestProps<'button'> & {
    variant?: 'basic' | 'filled' | 'outline';
    state?: State;
    stretch?: boolean;
    rightIcon?: boolean;
    icon?: IconProp;
    small?: boolean;
    active?: boolean;
};
export declare type ButtonType = ForwardRefType<HTMLButtonElement, ButtonProps, {
    Group?: ForwardRefType<HTMLDivElement, ButtonGroupProps>;
}>;
declare const _default: ForwardRefType<HTMLButtonElement, Pick<React.DetailedHTMLProps<React.ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>, "key" | keyof React.ButtonHTMLAttributes<HTMLButtonElement>> & {
    variant?: "basic" | "filled" | "outline" | undefined;
    state?: "inactive" | "neutral" | "theme" | "success" | "warning" | "alert" | undefined;
    stretch?: boolean | undefined;
    rightIcon?: boolean | undefined;
    icon?: IconProp | undefined;
    small?: boolean | undefined;
    active?: boolean | undefined;
} & React.RefAttributes<HTMLButtonElement>, Required<React.ForwardRefExoticComponent<Pick<React.DetailedHTMLProps<React.ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>, "key" | keyof React.ButtonHTMLAttributes<HTMLButtonElement>> & {
    variant?: "basic" | "filled" | "outline" | undefined;
    state?: "inactive" | "neutral" | "theme" | "success" | "warning" | "alert" | undefined;
    stretch?: boolean | undefined;
    rightIcon?: boolean | undefined;
    icon?: IconProp | undefined;
    small?: boolean | undefined;
    active?: boolean | undefined;
} & React.RefAttributes<HTMLButtonElement>> & {
    Group?: React.ForwardRefExoticComponent<Pick<React.DetailedHTMLProps<React.HTMLAttributes<HTMLDivElement>, HTMLDivElement>, "key" | keyof React.HTMLAttributes<HTMLDivElement>> & React.RefAttributes<HTMLDivElement>> | undefined;
}>>;
export default _default;
