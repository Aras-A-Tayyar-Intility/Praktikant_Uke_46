function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

import React, { forwardRef } from 'react';
import PropTypes from 'prop-types';
import classnames from 'classnames';
import Icon from '../../Visual/Icon';
import Breadcrumbs from '../Breadcrumbs';
import { faAngleLeft } from '../../../assets/faAngleLeft';
import useLocale from '../../../hooks/useLocale';

/**
 * Display a breadcrumb link that triggers history.back (can be overridden with onClick)
 */
var BackButton = /*#__PURE__*/forwardRef(function (_ref, ref) {
  var className = _ref.className,
      text = _ref.text,
      props = _objectWithoutProperties(_ref, ["className", "text"]);

  var locale = useLocale();
  return /*#__PURE__*/React.createElement(Breadcrumbs, null, /*#__PURE__*/React.createElement(Breadcrumbs.Item, null, /*#__PURE__*/React.createElement("button", _extends({
    type: "button",
    onClick: function onClick() {
      return window.history.back();
    }
  }, props, {
    className: classnames('bf-link', className),
    ref: ref
  }), /*#__PURE__*/React.createElement(Icon, {
    style: {
      marginRight: '4px'
    },
    icon: faAngleLeft
  }), text !== null && text !== void 0 ? text : locale.back)));
});
BackButton.propTypes = {
  /** CSS class name(s) */
  className: PropTypes.string,

  /** Text (default 'Back') */
  text: PropTypes.string
};
BackButton.displayName = 'BackButton';
export default BackButton;