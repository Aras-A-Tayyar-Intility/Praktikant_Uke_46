function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

import React, { forwardRef } from 'react';
import PropTypes from 'prop-types';
import { faAngleRight } from '../../../assets/faAngleRight';
import Icon from '../../Visual/Icon';

/**
 * An item in a `<Breadcrumbs>` path
 * @visibleName Breadcrumbs.Item
 */
var BreadcrumbsItem = /*#__PURE__*/forwardRef(function (props, ref) {
  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement("div", {
    className: "bf-breadcrumb-angle"
  }, /*#__PURE__*/React.createElement(Icon, {
    icon: faAngleRight
  })), /*#__PURE__*/React.createElement("div", _extends({
    ref: ref
  }, props)));
});
BreadcrumbsItem.propTypes = {
  /** CSS class name(s) */
  className: PropTypes.string
};
BreadcrumbsItem.displayName = 'Breadcrumbs.Item';
export default BreadcrumbsItem;