import React from 'react';
import PropTypes from 'prop-types';
import { dateFormat, timeFormat } from '../../../utils/formatDate';
import useLocale from '../../../hooks/useLocale';

/** Format date and/or time based on current Bifrost locale */
var FormatDate = function FormatDate(_ref) {
  var date = _ref.date,
      show = _ref.show;

  var _useLocale = useLocale(),
      dateOptions = _useLocale.dateOptions;

  if (show === 'time') {
    return /*#__PURE__*/React.createElement(React.Fragment, null, timeFormat(dateOptions.locale, date, dateOptions.time));
  } else if (show === 'datetime') {
    return /*#__PURE__*/React.createElement(React.Fragment, null, dateFormat(dateOptions.locale, date, dateOptions.date) + ' ' + timeFormat(dateOptions.locale, date, dateOptions.time));
  } else {
    return /*#__PURE__*/React.createElement(React.Fragment, null, dateFormat(dateOptions.locale, date, dateOptions.date));
  }
};

FormatDate.defaultProps = {
  show: 'date'
};
FormatDate.propTypes = {
  /** Date object */
  date: PropTypes.instanceOf(Date),

  /** Display either 'date' (default), 'datetime', or 'time' */
  show: PropTypes.oneOf(['date', 'datetime', 'time'])
};
export default FormatDate;