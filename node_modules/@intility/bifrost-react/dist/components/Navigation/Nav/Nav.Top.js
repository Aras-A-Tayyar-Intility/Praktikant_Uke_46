"use strict";

function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _react = _interopRequireWildcard(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _classnames = _interopRequireDefault(require("classnames"));

var _IntilityLogo = _interopRequireDefault(require("../Sidebar/IntilityLogo.internal"));

var _NavLocationContext = _interopRequireDefault(require("./NavLocationContext.internal"));

var _Nav = _interopRequireDefault(require("./Nav.Theme"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function _getRequireWildcardCache() { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

/**
 * Nav top bar
 */
var NavTop = /*#__PURE__*/(0, _react.forwardRef)(function (_ref, ref) {
  var appName = _ref.appName,
      children = _ref.children,
      className = _ref.className,
      preLogo = _ref.preLogo,
      hideTheme = _ref.hideTheme,
      logoClassName = _ref.logoClassName,
      logoHref = _ref.logoHref,
      logoOnClick = _ref.logoOnClick,
      props = _objectWithoutProperties(_ref, ["appName", "children", "className", "preLogo", "hideTheme", "logoClassName", "logoHref", "logoOnClick"]);

  return /*#__PURE__*/_react.default.createElement(_NavLocationContext.default, {
    where: "top"
  }, /*#__PURE__*/_react.default.createElement("header", _extends({}, props, {
    className: (0, _classnames.default)('bf-nav bf-nav-top', className),
    ref: ref
  }), preLogo, /*#__PURE__*/_react.default.createElement("div", {
    className: (0, _classnames.default)('bf-intility-logo', logoClassName)
  }, /*#__PURE__*/_react.default.createElement("a", {
    href: logoHref,
    onClick: logoOnClick
  }, /*#__PURE__*/_react.default.createElement(_IntilityLogo.default, null))), /*#__PURE__*/_react.default.createElement("div", {
    className: "bf-nav-top-appname"
  }, /*#__PURE__*/_react.default.createElement("span", {
    className: "from-small"
  }, appName)), /*#__PURE__*/_react.default.createElement("div", {
    className: "bf-nav-top-content"
  }, children, !hideTheme && /*#__PURE__*/_react.default.createElement(_Nav.default, null))));
});
NavTop.propTypes = {
  /** Name of your application */
  appName: _propTypes.default.node.isRequired,

  /** Top bar content */
  children: _propTypes.default.node,

  /** Any content placed left of the logo (like a hamburger) */
  preLogo: _propTypes.default.node,

  /** Hide the color scheme picker dropdown */
  hideTheme: _propTypes.default.bool,

  /** CSS class name(s) */
  className: _propTypes.default.string,

  /** CSS class name(s) for logo container */
  logoClassName: _propTypes.default.string,

  /** Custom url for clickable logo (default '/') */
  logoHref: _propTypes.default.string,

  /** Clickable logo event */
  logoOnClick: _propTypes.default.func
};
NavTop.defaultProps = {
  logoHref: '/'
};
NavTop.displayName = 'Nav.Top';
var _default = NavTop;
exports.default = _default;