"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _react = _interopRequireDefault(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _classnames = _interopRequireDefault(require("classnames"));

var _freeSolidSvgIcons = require("@fortawesome/free-solid-svg-icons");

var _reactDatepicker = _interopRequireDefault(require("react-datepicker"));

var _types = require("../../../types");

var _Icon = _interopRequireDefault(require("../../Visual/Icon"));

var _useLocale = _interopRequireDefault(require("../../../hooks/useLocale"));

var _Label = _interopRequireDefault(require("../Label"));

var _common = require("../common");

var _useUniqueId = _interopRequireDefault(require("../../../hooks/useUniqueId"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

var DatePicker = function DatePicker(_ref) {
  var label = _ref.label,
      hideLabel = _ref.hideLabel,
      icon = _ref.icon,
      rightIcon = _ref.rightIcon,
      disabled = _ref.disabled,
      state = _ref.state,
      feedback = _ref.feedback,
      required = _ref.required,
      description = _ref.description,
      requiredNoLabel = _ref.requiredNoLabel,
      optional = _ref.optional,
      className = _ref.className,
      isClearable = _ref.isClearable,
      id = _ref.id,
      containerProps = _ref.containerProps,
      props = _objectWithoutProperties(_ref, ["label", "hideLabel", "icon", "rightIcon", "disabled", "state", "feedback", "required", "description", "requiredNoLabel", "optional", "className", "isClearable", "id", "containerProps"]);

  var locale = (0, _useLocale.default)();
  var inputId = (0, _useUniqueId.default)(id);
  var displayIcon;

  if (state === 'warning' || state === 'alert') {
    displayIcon = _freeSolidSvgIcons.faExclamationTriangle;
  } else if (state === 'success') {
    displayIcon = _freeSolidSvgIcons.faCheck;
  } else if (icon) {
    displayIcon = icon;
  } else {
    displayIcon = _freeSolidSvgIcons.faCalendarAlt;
  }

  return /*#__PURE__*/_react.default.createElement("div", _extends({}, containerProps, {
    className: (0, _classnames.default)('bf-datepicker-container', containerProps && containerProps.className, {
      'bf-datepicker-disabled': disabled,
      'bf-datepicker-success': state === 'success',
      'bf-datepicker-warning': state === 'warning',
      'bf-datepicker-alert': state === 'alert'
    }),
    "data-testid": "bf-datepicker-container"
  }), !hideLabel && /*#__PURE__*/_react.default.createElement(_Label.default, {
    htmlFor: inputId,
    required: required && !requiredNoLabel,
    optional: optional,
    disabled: disabled
  }, label), description && /*#__PURE__*/_react.default.createElement(_common.Description, null, description), /*#__PURE__*/_react.default.createElement("div", {
    className: (0, _classnames.default)('bf-datepicker-icon-container', {
      'bf-datepicker-icon-right': rightIcon,
      'bf-datepicker-icon-left': !rightIcon,
      'bf-show-time-select': props.showTimeSelect,
      'bf-datepicker-clearable': isClearable
    })
  }, /*#__PURE__*/_react.default.createElement(_reactDatepicker.default, _extends({
    popperPlacement: "bottom",
    className: (0, _classnames.default)('bf-datepicker', className),
    id: inputId,
    dateFormat: (props === null || props === void 0 ? void 0 : props.showYearPicker) && 'yyyy' || (props === null || props === void 0 ? void 0 : props.showMonthYearPicker) && 'MM.yyyy' || ((props === null || props === void 0 ? void 0 : props.showTimeSelect) || (props === null || props === void 0 ? void 0 : props.showTimeInput)) && 'dd.MM.yyyy HH:mm' || 'dd.MM.yyyy',
    timeFormat: "HH:mm",
    showMonthDropdown: true,
    useShortMonthInDropdown: true,
    showYearDropdown: true,
    yearDropdownItemNumber: 5,
    disabled: disabled,
    locale: locale.datepicker,
    placeholderText: props !== null && props !== void 0 && props.showTimeSelect || props !== null && props !== void 0 && props.showTimeInput ? 'DD.MM.YYYY HH:MM' : 'DD.MM.YYYY',
    isClearable: isClearable,
    formatWeekDay: function formatWeekDay(day) {
      return day.substr(0, 1);
    }
  }, (props === null || props === void 0 ? void 0 : props.showTimeSelect) && {
    fixedHeight: true
  }, props)), /*#__PURE__*/_react.default.createElement("span", {
    className: (0, _classnames.default)('bf-datepicker-icon', {
      'bf-state-icon': state
    })
  }, /*#__PURE__*/_react.default.createElement(_Icon.default, {
    icon: displayIcon,
    fixedWidth: true
  }))), feedback && /*#__PURE__*/_react.default.createElement(_common.Feedback, null, feedback));
};

DatePicker.propTypes = {
  /** Required label text */
  label: _propTypes.default.string.isRequired,

  /** Hide label text, will add label prop as aria-label for screen readers */
  hideLabel: _propTypes.default.bool,

  /** Font Awesome icon reference (or string if using library) */
  //@ts-ignore
  icon: _propTypes.default.oneOfType([_propTypes.default.object, _propTypes.default.array, _propTypes.default.string]),

  /** Position icon on right hand side (default true) */
  rightIcon: _propTypes.default.bool,

  /** Available states: `theme` (default), `success`, `warning`, and `alert` */
  state: _propTypes.default.oneOf(_types.StateArray),

  /** Feedback text below the input field */
  feedback: _propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.node]),

  /** CSS class name(s) */
  className: _propTypes.default.string,

  /** Unique id for input and label */
  id: _propTypes.default.string,

  /** Disables the input field */
  disabled: _propTypes.default.bool,

  /** Placeholder text */
  placeholderText: _propTypes.default.string,

  /** Date format. Default 'dd.MM.yyyy' */
  dateFormat: _propTypes.default.string,

  /** Required prop indicating mandatory field */
  required: _propTypes.default.bool,

  /** Description text to show more information */
  description: _propTypes.default.string,

  /** Bool to mark input required, but hides the required label */
  requiredNoLabel: _propTypes.default.bool,

  /** Marks input as optional */
  optional: _propTypes.default.bool,

  /** Props for the containing `div` element */
  containerProps: _propTypes.default.object,

  /** Showing time select */
  showTimeSelect: _propTypes.default.bool,

  /** Sets time intervals (default 30) */
  timeIntervals: _propTypes.default.number,

  /** Showing time input */
  showTimeInput: _propTypes.default.bool,

  /** Showing month selection */
  showMonthYearPicker: _propTypes.default.bool,

  /** Showing year selection */
  showYearPicker: _propTypes.default.bool,

  /**  Bool to indicate if Datepicker should be clearable. This will add an icon that will clear the value of Datepicker */
  isClearable: _propTypes.default.bool
};
DatePicker.defaultProps = {
  rightIcon: true,
  timeIntervals: 30
};
var _default = DatePicker;
exports.default = _default;