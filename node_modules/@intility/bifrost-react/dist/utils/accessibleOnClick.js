"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

// When onClick is provided to a component
// component should have tabIndex and keyboard bindings
// this function return value can be spread on a native element
// makes the element simulate what a button element natively does
var accessibleOnClick = function accessibleOnClick(props, onClick) {
  if (typeof onClick === 'function') {
    return {
      onClick: onClick,
      role: 'button',
      tabIndex: 0,
      onKeyDown: function onKeyDown(e) {
        var _props$onKeyDown;

        if (e.key === 'Enter') {
          e.preventDefault();

          if (!e.repeat) {
            onClick(e);
          }
        } else if (e.key === ' ') {
          e.preventDefault();
        }

        (_props$onKeyDown = props.onKeyDown) === null || _props$onKeyDown === void 0 ? void 0 : _props$onKeyDown.call(props, e);
      },
      onKeyUp: function onKeyUp(e) {
        var _props$onKeyUp;

        if (e.key === ' ') {
          e.preventDefault();
          onClick(e);
        }

        (_props$onKeyUp = props.onKeyUp) === null || _props$onKeyUp === void 0 ? void 0 : _props$onKeyUp.call(props, e);
      }
    };
  }
};

var _default = accessibleOnClick;
exports.default = _default;